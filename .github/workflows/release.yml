name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create changelog for release
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: 'changelog.config.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          body: ${{ steps.github_release.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha')}}

  deploy:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Set env variables
        shell: bash
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set package.json version
        uses: wurielle/package-version-action@v1
        with:
          version: ${{ env.RELEASE_VERSION }}
          targets: |
            ./packages/generate-exports/package.json
            ./packages/vite-plugin-generate-exports/package.json

      - name: Build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm run build

      - name: Authenticate with Registry
        run: |
          npm logout
          echo "@wurielle:registry=https://registry.npmjs.org/" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish packages
        run: lerna run build:publish

      - name: Rollback Release
        if: failure()
        uses: author/action-rollback@stable
        with:
          tag: ${{ env.RELEASE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
